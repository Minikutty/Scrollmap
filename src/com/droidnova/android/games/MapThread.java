/**************************************************************************************
 * 
 * Copyright (C) 2015 Minikutty Joseph
 * 
 * [This program is licensed under the "MIT License"]
 * For license information, please refer the following link. Link is
 * https://github.com/Minikutty/Scrollmap/blob/master/License.md
 *
 *  **************************************************************************************/

package com.droidnova.android.games;

import android.graphics.Canvas;

/**
 * Thread class to perform the so called "game loop".
 * 
 * @author DJohn
 */
public class MapThread extends Thread {
    private CellMap _cellMap;
    public boolean _run = false;
    
    /**
     * Constructor.
     * 
     * @param panel View class on which we trigger the drawing.
     */
    public MapThread(CellMap map) {
        _cellMap = map;
    }
    
    /**
     * Perform the game loop.
     */
    @Override
    public void run() {
        Canvas c;
        int x = 0;
        int y = 0;
        int px = 0;
        int py = 0;
        int i = 0;
        int shift = 0;
        int prevX = 0;
        int prevY = 0;
        // double prevX = 0;
        // double prevY = 0;
        
        int xy[] = {1500,1500,1505,1505,1510,1510,1515,1515,1520,1520,1525,1525,1530,1530,1535,1535,1540,1540,1545,1545,
        		1550,1550,1555,1555,1560,1560,1565,1565,1570,1570,1575,1575,1580,1580,1585,1585,1590,1590,1595,
        		1595,1600,1600,1605,1605,1610,1610,1615,1615,1620,1620,1625,1625,1630,1630,1635,1635,1640,1640,
        		1645,1645,1650,1650,1655,1655,1660,1660,1665,1665,1670,1670,1675,1675,1680,1680,1685,1685,1690,
        		1690,1695,1695,1700,1700,1705,1705,1710,1710,1715,1715,1720,1720,1725,1725,1730,1730,1735,1735,
        		1740,1740,1745,1745,1750,1750,1755,1755,1760,1760,1765,1765,1770,1770,1775,1775,1780,1780,1785,
        		1785,1790,1790,1795,1795,1800,1800,1805,1805,1810,1810,1815,1815,1820,1820,1825,1825,1830,1830,
        		1835,1835,1840,1840,1845,1845,1850,1850,1855,1855,1860,1860,1865,1865,1870,1870,1875,1875,1880,
        		1880,1885,1885,1890,1890,1895,1895,1900,1900,1905,1905,1910,1910,1915,1915,1920,1920,1925,1925,
        		1930,1930,1935,1935,1940,1940,1945,1945,1950,1950,1955,1955,1960,1960,1965,1965,1970,1970,1975,
        		1975,1980,1980,1985,1985,1990,1990,1995,1995,2000,2000,2005,2005,2010,2010,2015,2015,2020,2020,
        		2025,2025,2030,2030,2035,2035,2040,2040,2045,2045,2050,2050,2055,2055,2060,2060,2065,2065,2070,
        		2070,2075,2075,2080,2080,2085,2085,2090,2090,2095,2095,2100,2100,2105,2105,2110,2110,2115,2115,
        		2120,2120,2125,2125,2130,2130,2135,2135,2140,2140,2145,2145,2150,2150,2155,2155,2160,2160,2165,
        		2165,2170,2170,2175,2175,2180,2180,2185,2185,2190,2190,2195,2195,2200,2200,2205,2205,2210,2210,
        		2215,2215,2220,2220,2225,2225,2230,2230,2235,2235,2240,2240,2245,2245,2250,2250,2255,2250,2260,
        		2250,2265,2250,2270,2250,2275,2250,2280,2250,2285,2250,2290,2250,2295,2250,2300,2250,2305,2250,
        		2310,2250,2315,2250,2320,2250,2325,2250,2330,2250,2335,2250,2340,2250,2345,2250,2350,2250,2355,
        		2250,2360,2250,2365,2250,2370,2250,2375,2250,2380,2250,2385,2250,2390,2250,2395,2250,2400,2250,
        		2405,2245,2410,2244,2415,2243,2420,2242,2425,2241,2430,2240,2435,2239,2440,2238,2445,2237,2450,
        		2236,2455,2235,2460,2234,2465,2233,2470,2232,2475,2231,2480,2230,2485,2229,2490,2228,2495,2227,
        		2500,2226,2505,2225,2510,2224,2515,2223,2520,2222,2525,2221,2530,2220,2535,2219,2540,2218,2545,
        		2217,2550,2216,2555,2215,2560,2214,2565,2213,2570,2212,2575,2211,2580,2210,2585,2209,2590,2208,
        		2595,2207,2600,2206,2605,2205,2610,2204,2615,2203,2620,2202,2625,2201,2630,2200,2635,2199,2640,
        		2198,2645,2197,2650,2196,2655,2195,2660,2194,2665,2193,2670,2192,2675,2191,2680,2190,2685,2189,
        		2690,2188,2695,2187,2700,2186,2705,2185,2710,2184,2715,2183,2720,2182,2725,2181,2730,2180,2735,
        		2179,2740,2178,2745,2177,2750,2176,2755,2175,2760,2174,2765,2173,2770,2172,2775,2171,2780,2170,
        		2785,2169,2790,2168,2795,2167,2800,2166,2805,2165,2810,2164,2815,2163,2820,2162,2825,2161,2830,
        		2160,2835,2159,2840,2158,2845,2157,2850,2156,2855,2155,2860,2154,2865,2153,2870,2152,2875,2151,
        		2880,2150,2885,2149,2890,2148,2895,2147,2900,2146,2905,2145,2910,2144,2915,2143,2920,2142,2925,
        		2141,2930,2140,2935,2139,2940,2138,2945,2137,2950,2136,2955,2135,2960,2134,2965,2133,2970,2132,
        		2975,2131,2980,2130,2985,2129,2990,2128,2995,2127,3000,2126,3005,2125,3010,2124,3015,2123,3020,
        		2122,3025,2121,3030,2120,3035,2119,3040,2118,3045,2117,3050,2116,3055,2115,3060,2114,3065,2113,
        		3070,2112,3075,2111,3080,2110,3085,2109,3090,2108,3095,2107,3100,2106,3105,2105,3110,2104,3115,
        		2103,3120,2102,3125,2101,3130,2100,3135,2099,3140,2098,3145,2097,3150,2096,3155,2095,3160,2094,
        		3165,2093,3170,2092,3175,2091,3180,2090,3185,2089,3190,2088,3195,2087,3200,2086,3205,2085,3210,
        		2084,3215,2083,3220,2082,3225,2081,3230,2080,3235,2079,3240,2078,3245,2077,3250,2076,3255,2075,
        		3260,2074,3265,2073,3270,2072,3275,2071,3280,2070,3285,2069,3290,2068,3295,2067,3300,2066,3305,
        		2065,3310,2064,3315,2063,3320,2062,3325,2061,3330,2060,3335,2059,3340,2058,3345,2057,3350,2056,
        		3355,2055,3360,2054,3365,2053,3370,2052,3375,2051,3380,2050,3385,2049,3390,2048,3395,2047,3400,
        		2046,3405,2045,3410,2044,3415,2043,3420,2042,3425,2041,3430,2040,3435,2039,3440,2038,3445,2037,
        		3450,2036,3455,2035,3460,2034,3465,2033,3470,2032,3475,2031,3480,2030,3485,2029,3490,2028,3495,
        		2027,3500,2026,3505,2025,3510,2024,3515,2023,3520,2022,3525,2021,3530,2020,3535,2019,3540,2018,
        		3545,2017,3550,2016,3555,2015,3560,2014,3565,2013,3570,2012,3575,2011,3580,2010,3585,2009,3590,
        		2008,3595,2007,3600,2006,3605,2005,3610,2004,3615,2003,3620,2002,3625,2001,3630,2000,3635,1999,
        		3640,1998,3645,1997,3650,1996,3655,1995,3660,1994,3665,1993,3670,1992,3675,1991,3680,1990,3685,
        		1989,3690,1988,3695,1987,3700,1986,3705,1985,3710,1984,3715,1983,3720,1982,3725,1981,3730,1980,
        		3735,1979,3740,1978,3745,1977,3750,1976,3755,1975,3760,1974,3765,1973,3770,1972,3775,1971,3780,
        		1970,3785,1969,3790,1968,3795,1967,3800,1966,3805,1965,3810,1964,3815,1963,3820,1962,3825,1961,
        		3830,1960,3835,1959,3840,1958,3845,1957,3850,1956,3855,1955,3860,1954,3865,1953,3870,1952,3875,
        		1951,3880,1950,3885,1949,3890,1948,3895,1947,3900,1946,3905,1945,3910,1944,3915,1943,3920,1942,
        		3925,1941,3930,1940,3935,1939,3940,1938,3945,1937,3950,1936,3955,1935,3960,1934,3965,1933,3970,
        		1932,3975,1931,3980,1930,3985,1929,3990,1928,3995,1927,4000,1926,4005,1925,4010,1924,4015,1923,
        		4020,1922,4025,1921,4030,1920,4035,1919,4040,1918,4045,1917,4050,1916,4055,1915,4060,1914,4065,
        		1913,4070,1912,4075,1911,4080,1910,4085,1909,4090,1908,4095,1907,4100,1906,4105,1905,4110,1904,
        		4115,1903,4120,1902,4125,1901,4130,1900,4135,1899,4140,1898,4145,1897,4150,1896,4145,1896,4150,
        		1896,4155,1896,4160,1896,4165,1896,4170,1896,4175,1896,4180,1896,4185,1896,4190,1896,4195,1896,
        		4200,1896,4205,1896,4210,1896,4215,1896,4220,1896,4225,1896,4230,1896,4235,1896,4240,1896,4245,
        		1896,4250,1896,4255,1896,4260,1896,4265,1896,4270,1896,4275,1896,4280,1896,4285,1896,4290,1896,
        		4295,1896,4300,1896,4305,1896,4310,1896,4315,1896,4320,1896,4325,1896,4330,1896,4335,1896,4340,
        		1896,4345,1896,4350,1896,4355,1896,4360,1896,4365,1896,4370,1896,4375,1896,4380,1896,4385,1896,
        		4390,1896,4395,1901,4400,1906,4405,1911,4410,1916,4415,1921,4420,1926,4425,1931,4430,1936,4435,
        		1941,4440,1946,4445,1951,4450,1956,4455,1961,4460,1966,4465,1971,4470,1976,4475,1981,4480,1986,
        		4485,1991,4490,1996,4495,2001,4500,2006,4505,2011,4510,2016,4515,2021,4520,2026,4525,2031,4530,
        		2036,4535,2041,4540,2046,4545,2051,4550,2056,4555,2061,4560,2066,4565,2071,4570,2076,4575,2081,
        		4580,2086,4585,2091,4590,2096,4595,2101,4600,2106,4605,2111,4610,2116,4615,2121,4620,2126,4625,
        		2131,4630,2136,4635,2141,4640,2146,4645,2151,4650,2156,4655,2161,4660,2166,4665,2171,4670,2176,
        		4675,2181,4680,2186,4685,2191,4690,2196,4695,2201,4700,2206,4705,2211,4710,2216,4715,2221,4720,
        		2226,4725,2231,4730,2236,4735,2241,4740,2246,4745,2251,4750,2256,4755,2261,4760,2266,4765,2271,
        		4770,2276,4775,2281,4780,2286,4785,2291,4790,2296,4795,2301,4800,2306,4805,2311,4810,2316,4815,
        		2321,4820,2326,4825,2331,4830,2336,4835,2341,4840,2346,4845,2351,4850,2356,4855,2361,4860,2366,
        		4865,2371,4870,2376,4875,2381,4880,2386,4885,2391,4890,2396,4895,2401,4900,2406,4905,2411,4910,
        		2416,4915,2421,4920,2426,4925,2431,4930,2436,4935,2441,4940,2446,4945,2451,4950,2456,4955,2461,
        		4960,2466,4965,2471,4970,2476,4975,2481,4980,2486,4985,2491,4990,2496,4995,2501,5000,2506,5005,
        		2511,5010,2516,5015,2521,5020,2526,5025,2531,5030,2536,5035,2541,5040,2546,5045,2551,5050,2556,
        		5055,2561,5060,2566,5065,2571,5070,2576,5075,2581,5080,2586,5085,2591,5090,2596,5095,2601,5100,
        		2606,5105,2611,5110,2616,5115,2621,5120,2626,5125,2631,5130,2636,5135,2641,5140,2646,5145,2651,
        		5150,2656,5155,2661,5160,2666,5165,2671,5170,2676,5175,2681,5180,2686,5185,2691,5190,2696,5195,
        		2701,5200,2706,5205,2711,5210,2716,5215,2721,5220,2726,5225,2731,5230,2736,5235,2741,5240,2746,
        		5245,2751,5250,2756,5255,2761,5260,2766,5265,2771,5270,2776,5275,2781,5280,2786,5285,2791,5290,
        		2796,5295,2801,5300,2806,5305,2811,5310,2816,5315,2821,5320,2826,5325,2831,5330,2836,5335,2841,
        		5340,2846,5345,2851,5350,2856,5355,2861,5360,2866,5365,2871,5370,2876,5375,2881,5380,2886,5385,
        		2891,5390,2896,5395,2901,5400,2906,5405,2911,5410,2916,5415,2921,5420,2926,5425,2931,5430,2936,
        		5435,2941,5440,2946,5445,2951,5450,2956,5455,2961,5460,2966,5465,2971,5470,2976,5475,2981,5480,
        		2986,5485,2991,5490,2996,5495,3001,5500,3006,5505,3011,5510,3016,5515,3021,5520,3026,5525,3031,
        		5530,3036,5535,3041,5540,3046,5545,3051,5550,3056,5555,3061,5560,3066,5565,3071,5570,3076,5575,
        		3081,5580,3086,5585,3091,5590,3096,5595,3101,5600,3106,5605,3111,5610,3116,5615,3121,5620,3126,
        		5625,3131,5630,3136,5635,3141,5640,3146,5645,3151,5650,3156,5655,3161,5660,3166,5665,3171,5670,
        		3176,5675,3181,5680,3186,5685,3191,5690,3196,5695,3201,5700,3206,5705,3211,5710,3216,5715,3221,
        		5720,3226,5725,3231,5730,3236,5735,3241,5740,3246,5745,3251,5750,3256,5755,3261,5760,3266,5765,
        		3271,5770,3276,5775,3281,5780,3286,5785,3291,5790,3296,5795,3301,5800,3306,5805,3311,5810,3316,
        		5815,3321,5820,3326,5825,3331,5830,3336,5835,3341,5840,3346,5845,3351,5850,3356,5855,3361,5860,
        		3366,5865,3371,5870,3376,5875,3381,5880,3386,5885,3391,5890,3396,5895,3401,5900,3406,5905,3411,
        		5910,3416,5915,3421,5920,3426,5925,3431,5930,3436,5935,3441,5940,3446,5945,3451,5950,3456,5955,
        		3461,5960,3466,5965,3471,5970,3476,5975,3481,5980,3486,5985,3491,5990,3496,5995,3501,6000,3506,
        		6005,3511,6010,3516,6015,3521,6020,3526,6015,3531,6010,3536,6005,3541,6000,3546,6005,3551,6010,
        		3556,6015,3561,6020,3566,6015,3571,6010,3576,6005,3581,6000,3586,6005,3591,6010,3596,6015};
        while (_run) {
            c = null;
            try {
                c = _cellMap.getHolder().lockCanvas(null);
                synchronized (_cellMap.getHolder()) {
                	//depth = rand.nextInt(3);
                	// x = (x+1)%2500;
                    // y = (y+1)%2500;
                    // x = xy[i]%6020; // change
                    // y = xy[i+1]%8094; // change
                	if(prevX != (int) ScrollMap.longitude )
                	// if(prevX != ScrollMap.longitude )
                	{
                		prevX = (int) ScrollMap.longitude; 
                		prevY = (int) ScrollMap.latitude;
                		x = prevX;
                		y = prevY;
                		/** prevX = ScrollMap.longitude; 
                		prevY = ScrollMap.latitude;
                		x = (int) (((76.7833f - prevX)*6020.0f/0.2639)%6020.0);
                		y = (int) (((34.8918f - prevY)*8094.0f/0.2918)%8094.0); */
                	}
                	if(prevY != (int) ScrollMap.latitude )
                	// if(prevY != ScrollMap.latitude )
                	{
                		prevX = (int) ScrollMap.longitude; 
                		prevY = (int) ScrollMap.latitude;
                		x = prevX; 
                		y = prevY;  
                		/** prevX = ScrollMap.longitude; 
                		prevY = ScrollMap.latitude;
                		x = (int) (((76.7833f - prevX)*6020.0f/0.2639)%6020.0);
                		y = (int) (((34.8918f - prevY)*8094.0f/0.2918)%8094.0); */ 
                	}
                	x = (x + 5)%6020;
                	y = (y + 5)%8094;
                	/**
                	x = 0;
                	if(y<2200)
                		y = (y+10); //%2100;
                	else y = y+1;
                	
                	if(y == 2237)
                	{
                		y = 0;
                		shift = 1;
                	} */
                    if(i>2) {
                    	px = x - 5;
                    	py = y - 5;
                    // px = xy[i-2]%6500; // change
                    // py = xy[i-1]%8948; // change
                    }
                    boolean Q00 = (x < 1625 && y < 2237);
                    boolean Q01 = (x < 1625 && y >= 2237 && y < 4474);
                    boolean Q02 = (x < 1625 && y >= 4474 && y < 6711);
                    boolean Q03 = (x < 1625 && y >= 6711 && y < 8948);
                    boolean Q10 = (x >= 1625 && x < 3250 && y < 2237);
                    boolean Q11 = (x >= 1625 && x < 3250 && y >= 2237 && y < 4474);
                    boolean Q12 = (x >= 1625 && x < 3250 && y >= 4474 && y < 6711);
                    boolean Q13 = (x >= 1625 && x < 3250 && y >= 6711 && y < 8948);
                    boolean Q20 = (x >= 3250 && x < 4875 && y < 2237);              
                    boolean Q21 = (x >= 3250 && x < 4875 && y >= 2237 && y < 4474); 
                    boolean Q22 = (x >= 3250 && x < 4875 && y >= 4474 && y < 6711); 
                    boolean Q23 = (x >= 3250 && x < 4875 && y >= 6711 && y < 8948); 
                    boolean Q30 = (x >= 4875 && x < 6500 && y < 2237);               
                    boolean Q31 = (x >= 4875 && x < 6500 && y >= 2237 && y < 4474);  
                    boolean Q32 = (x >= 4875 && x < 6500 && y >= 4474 && y < 6711);  
                    boolean Q33 = (x >= 4875 && x < 6500 && y >= 6711 && y < 8948);  
                    boolean pQ00 = (px < 1625 && py < 2237);
                    boolean pQ01 = (px < 1625 && py >= 2237 && py < 4474);
                    boolean pQ02 = (px < 1625 && py >= 4474 && py < 6711);
                    boolean pQ03 = (px < 1625 && py >= 6711 && py < 8948);
                    boolean pQ10 = (px >= 1625 && px < 3250 && py < 2237);
                    boolean pQ11 = (px >= 1625 && px < 3250 && py >= 2237 && py < 4474);
                    boolean pQ12 = (px >= 1625 && px < 3250 && py >= 4474 && py < 6711);
                    boolean pQ13 = (px >= 1625 && px < 3250 && py >= 6711 && py < 8948);
                    boolean pQ20 = (px >= 3250 && px < 4875 && py < 2237);              
                    boolean pQ21 = (px >= 3250 && px < 4875 && py >= 2237 && py < 4474); 
                    boolean pQ22 = (px >= 3250 && px < 4875 && py >= 4474 && py < 6711); 
                    boolean pQ23 = (px >= 3250 && px < 4875 && py >= 6711 && py < 8948); 
                    boolean pQ30 = (px >= 4875 && px < 6500 && py < 2237);               
                    boolean pQ31 = (px >= 4875 && px < 6500 && py >= 2237 && py < 4474);  
                    boolean pQ32 = (px >= 4875 && px < 6500 && py >= 4474 && py < 6711);  
                    boolean pQ33 = (px >= 4875 && px < 6500 && py >= 6711 && py < 8948);  

                    if(pQ00)
                    {
                    	if(Q01 || Q10 || Q11) shift = 1;
                    }
                    else if(pQ01)
                    {
                    	if(Q00 || Q02 || Q10 || Q11 || Q12) shift = 1;
                    }
                    else if(pQ02)
                    {
                    	if(Q01 || Q03 || Q11 || Q12 || Q13) shift = 1;
                    }
                    else if(pQ03)
                    {
                    	if(Q02 || Q12 || Q13) shift = 1;
                    }
                    else if(pQ10)
                    {
                    	if(Q00 || Q01 || Q11 || Q20 || Q21) shift = 1;
                    }
                    else if(pQ11)
                    {
                    	if(Q00 || Q01 || Q02 || Q10 || Q12 || Q20 || Q21 || Q22) shift = 1;
                    }
                    else if(pQ12)
                    {
                    	if(Q01 || Q02 || Q03 || Q11 || Q13 || Q21 || Q22 || Q23) shift = 1;
                    }
                    else if(pQ13)
                    {
                    	if(Q02 || Q03 || Q12 || Q22 || Q23) shift = 1;
                    }
                    else if(pQ20)
                    {
                    	if(Q10 || Q11 || Q21 || Q30 || Q31) shift = 1;
                    }
                    else if(pQ21)
                    {
                    	if(Q10 || Q11 || Q12 || Q20 || Q22 || Q30 || Q31 || Q32) shift = 1;
                    }
                    else if(pQ22)
                    {
                    	if(Q11 || Q12 || Q13 || Q21 || Q23 || Q31 || Q32 || Q33) shift = 1;
                    }
                    else if(pQ23)
                    {
                    	if(Q12 || Q13 || Q22 || Q32 || Q33) shift = 1;
                    }
                    else if(pQ30)
                    {
                    	if(Q31 || Q20 || Q21) shift = 1;
                    }
                    else if(pQ31)
                    {
                    	if(Q30 || Q32 || Q20 || Q21 || Q22) shift = 1;
                    }
                    else if(pQ32)
                    {
                    	if(Q31 || Q33 || Q21 || Q22 || Q23) shift = 1;
                    }
                    else if(pQ33)
                    {
                    	if(Q32 || Q22 || Q23) shift = 1;
                    }
                	i = (i+2);
                	int j = (i + 8);
                	// double theta = Math.atan2((x-(xy[j]%6500)), (y-(xy[j+1]%8948))); // change
                	double theta = Math.atan2(-5, -5);
                	double angle = Math.toDegrees(theta);
                    _cellMap.onDraw(c);
                    _cellMap.onEvent(x,y,(float) angle, shift);
                    // _cellMap.onEvent(x,y,(float) 0, shift);
                    shift = 0;
                }
            } finally {
                // do this in a finally so that if an exception is thrown
                // during the above, we don't leave the Surface in an
                // inconsistent state
                if (c != null) {
                    _cellMap.getHolder().unlockCanvasAndPost(c);
                }
            }
        }
    }
}